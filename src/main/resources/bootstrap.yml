spring:
  application:
    name: openwms-services
  security:
    user:
      password: sa
      name: user

server:
  port: ${PORT:8761}

owms:
  srv:
    protocol: http
    hostname: localhost
  eureka:
    url: ${owms.srv.protocol}://${spring.security.user.name}:${spring.security.user.password}@${owms.srv.hostname}:${server.port}
    zone: ${owms.eureka.url}/eureka/

# https://medium.com/@fahimfarookme/the-mystery-of-eureka-self-preservation-c7aa0ed1b799
eureka:
  client:
    register-with-eureka: false # default is true
    fetch-registry: false # default is true
    instance-info-replication-interval-seconds: 30 # default is 30
    service-url:
      defaultZone: ${owms.eureka.zone} # Must be camelCase
  server:
    wait-time-in-ms-when-sync-empty: 0 # default is 60000
    eviction-interval-timer-in-ms: 60000 # default is 60000
    enable-self-preservation: true # default is true
    renewal-percent-threshold: 0.49 # default is 0.85
  instance:
    secure-port-enabled: false
    non-secure-port-enabled: true
    metadata-map:
      zone: ${owms.eureka.zone}
      username: ${spring.security.user.name}
      password: ${spring.security.user.password}
      protocol: ${owms.srv.protocol}
   # hostname: ${owms.srv.hostname} # to avoid 401 batch update errors

management:
  server:
    port: ${MGMTPORT:8990}

---
spring:
  profiles: CLOUD
  main:
    banner-mode: "OFF"

owms:
  srv:
    protocol: https
    hostname: openwms-services.herokuapp.com

eureka:
  server:
    eviction-interval-timer-in-ms: 0
    wait-time-in-ms-when-sync-empty: 0
  client:
    register-with-eureka: false
    fetch-registry: false
    service-url:
      defaultZone: ${owms.eureka.url}/eureka/ # Must be camelCase
  instance:
    secure-port-enabled: true
    non-secure-port-enabled: false
    status-page-url: ${owms.srv.protocol}://${eureka.instance.hostname}:${server.port}/actuator/info
    health-check-url: ${owms.srv.protocol}://${eureka.instance.hostname}:${server.port}/actuator/health
    home-page-url: ${owms.srv.protocol}://${eureka.instance.hostname}:${server.port}/actuator/

